[{"/Users/macintoshhd/Desktop/Web-Blog/client/src/index.js":"1","/Users/macintoshhd/Desktop/Web-Blog/client/src/App.js":"2","/Users/macintoshhd/Desktop/Web-Blog/client/src/menu_footer/Menu.js":"3","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/home.js":"4","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/intro.js":"5","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Home.js":"6","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Intro.js":"7","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Section1.js":"8","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Section2.js":"9","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/components/Card.js":"10","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Section3.js":"11","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/SideBar.js":"12","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/components/SubBlog.js":"13","/Users/macintoshhd/Desktop/Web-Blog/client/src/Store.js":"14","/Users/macintoshhd/Desktop/Web-Blog/client/src/reducers/index.js":"15","/Users/macintoshhd/Desktop/Web-Blog/client/src/reducers/blog.js":"16","/Users/macintoshhd/Desktop/Web-Blog/client/src/actions/types.js":"17","/Users/macintoshhd/Desktop/Web-Blog/client/src/utils/setAuthToken.js":"18","/Users/macintoshhd/Desktop/Web-Blog/client/src/actions/blog.js":"19","/Users/macintoshhd/Desktop/Web-Blog/client/src/components/Spinner.js":"20","/Users/macintoshhd/Desktop/Web-Blog/client/src/auth/Login.js":"21","/Users/macintoshhd/Desktop/Web-Blog/client/src/auth/Register.js":"22","/Users/macintoshhd/Desktop/Web-Blog/client/src/components/Header.js":"23","/Users/macintoshhd/Desktop/Web-Blog/client/src/reducers/alert.js":"24","/Users/macintoshhd/Desktop/Web-Blog/client/src/actions/alert.js":"25","/Users/macintoshhd/Desktop/Web-Blog/client/src/actions/auth.js":"26","/Users/macintoshhd/Desktop/Web-Blog/client/src/reducers/auth.js":"27","/Users/macintoshhd/Desktop/Web-Blog/client/src/components/alert.js":"28","/Users/macintoshhd/Desktop/Web-Blog/client/src/components/Alert.js":"29","/Users/macintoshhd/Desktop/Web-Blog/client/src/dashboard/Dashboard.js":"30","/Users/macintoshhd/Desktop/Web-Blog/client/src/PrivateRoute.js":"31","/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/Blogs.js":"32","/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/Blog.js":"33","/Users/macintoshhd/Desktop/Web-Blog/client/src/dashboard/Blogs.js":"34","/Users/macintoshhd/Desktop/Web-Blog/client/src/components/PopupDanger.js":"35","/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/Comment.js":"36","/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/AddComment.js":"37","/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/EditComment.js":"38"},{"size":293,"mtime":1608706788559,"results":"39","hashOfConfig":"40"},{"size":1756,"mtime":1610215530024,"results":"41","hashOfConfig":"40"},{"size":1897,"mtime":1610209864171,"results":"42","hashOfConfig":"40"},{"size":758,"mtime":1607872531288,"results":"43","hashOfConfig":"40"},{"size":333,"mtime":1607860303308,"results":"44","hashOfConfig":"40"},{"size":789,"mtime":1610207549661,"results":"45","hashOfConfig":"40"},{"size":333,"mtime":1607860303308,"results":"46","hashOfConfig":"40"},{"size":1171,"mtime":1610204741791,"results":"47","hashOfConfig":"40"},{"size":1103,"mtime":1610206527854,"results":"48","hashOfConfig":"40"},{"size":330,"mtime":1607869269112,"results":"49","hashOfConfig":"40"},{"size":2087,"mtime":1610210822129,"results":"50","hashOfConfig":"40"},{"size":4104,"mtime":1610208746410,"results":"51","hashOfConfig":"40"},{"size":1042,"mtime":1610212396594,"results":"52","hashOfConfig":"40"},{"size":388,"mtime":1608183932799,"results":"53","hashOfConfig":"40"},{"size":192,"mtime":1608028814029,"results":"54","hashOfConfig":"40"},{"size":2691,"mtime":1610177571480,"results":"55","hashOfConfig":"40"},{"size":1187,"mtime":1610119820574,"results":"56","hashOfConfig":"40"},{"size":442,"mtime":1608823467919,"results":"57","hashOfConfig":"40"},{"size":9155,"mtime":1610878859474,"results":"58","hashOfConfig":"40"},{"size":1305,"mtime":1608726847420,"results":"59","hashOfConfig":"40"},{"size":2679,"mtime":1610211989626,"results":"60","hashOfConfig":"40"},{"size":2990,"mtime":1610212058452,"results":"61","hashOfConfig":"40"},{"size":387,"mtime":1608454369103,"results":"62","hashOfConfig":"40"},{"size":428,"mtime":1608023197373,"results":"63","hashOfConfig":"40"},{"size":357,"mtime":1608026338256,"results":"64","hashOfConfig":"40"},{"size":2717,"mtime":1608388695923,"results":"65","hashOfConfig":"40"},{"size":1700,"mtime":1608390890586,"results":"66","hashOfConfig":"40"},{"size":509,"mtime":1608046236768,"results":"67","hashOfConfig":"40"},{"size":506,"mtime":1610201385635,"results":"68","hashOfConfig":"40"},{"size":8060,"mtime":1610213365257,"results":"69","hashOfConfig":"40"},{"size":525,"mtime":1608223878277,"results":"70","hashOfConfig":"40"},{"size":2226,"mtime":1610211068531,"results":"71","hashOfConfig":"40"},{"size":8218,"mtime":1610214375462,"results":"72","hashOfConfig":"40"},{"size":1294,"mtime":1610210988845,"results":"73","hashOfConfig":"40"},{"size":1642,"mtime":1609779037790,"results":"74","hashOfConfig":"40"},{"size":4696,"mtime":1610215563588,"results":"75","hashOfConfig":"40"},{"size":1135,"mtime":1610101151791,"results":"76","hashOfConfig":"40"},{"size":1304,"mtime":1610118073431,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"36crln",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"80"},"/Users/macintoshhd/Desktop/Web-Blog/client/src/index.js",[],["169","170"],"/Users/macintoshhd/Desktop/Web-Blog/client/src/App.js",["171"],"import React, { useEffect, Fragment} from 'react';\nimport {BrowserRouter, BrowserRouter as Router, Route, Switch} from 'react-router-dom'; \nimport setAuthToken from './utils/setAuthToken';\n\n\n//SECTION Redux \nimport {Provider} from 'react-redux';\nimport Store from './Store';\nimport { loadUser } from './actions/auth';\n\n\n//ANCHOR Main Components\nimport Home from './home/Home';\nimport Login from './auth/Login';\nimport Register from './auth/Register';\nimport Dashboard from './dashboard/Dashboard';\nimport Blogs from './blog/Blogs';\nimport Blog from './blog/Blog';\n//ANCOHR Route \nimport PrivateRoute from './PrivateRoute';\n\n//ANCHOR Sub Components \nimport Menu from './menu_footer/Menu';\nimport Alert from './components/Alert';\n\nimport './App.css';\nimport './Responsive.css';\n\n//NOTE check localStorage that there is any token there?\nif(localStorage.token){\n  setAuthToken(localStorage.token)\n}\n\nconst App = () => {\n  useEffect( () => {\n    Store.dispatch(loadUser());\n  },[]);\n\n  return(\n    <Provider store = {Store}>\n\n    <BrowserRouter>\n      <Router>\n        <div className=\"layout\">\n          <Menu/>\n          <Alert/>\n          <div className=\"container-fluid mx-0 px-0\">\n            <Switch>\n              <Route exact path='/' component={Home}/>\n              <Route exact path='/login' component={Login}/>\n              <Route exact path=\"/Register\" component={Register}/>\n              <Route exact path='/blogs' component={Blogs}/>\n              <Route exact path='/blog/:id' component={Blog}/>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              \n            </Switch>        \n          </div>    \n        </div>\n      </Router>\n    </BrowserRouter>\n    </Provider>\n    \n   \n  )\n\n}\n\nexport default App;\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/menu_footer/Menu.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/home/home.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/home/intro.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Home.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Intro.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Section1.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Section2.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/home/components/Card.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/home/Section3.js",["172"],"import React, {Fragment, useEffect} from 'react';\nimport photo from '../photo/home/section3/sec3.jpg';\nimport SubBlog from './components/SubBlog';\nimport { connect } from 'react-redux';\nimport { getBlogs } from '../actions/blog';\nimport Spinner from '../components/Spinner';\n\nconst Section3 = ({getBlogs, blog: {blogs, loading}  }) => {\n    useEffect(() => {\n        getBlogs();\n    },[getBlogs])\n\n    return (\n        <div className=\"sec-3 mb-5 \">\n            <div className=\"main-blog text-center\">\n                <img src={photo} alt=\"\"/>\n                <div className=\"date my-3\">\n                    <p>December 14, 2020 | Technology</p>\n                </div>\n                <h2 className=\"my-3\">What is MERN Stack</h2>\n                <div className=\"d-flex justify-content-center\">\n                    <div className=\"col-10\">\n                        <p>Borem ipsum dolor sit amet, adhuc iriure dissentias est in, est ne diam graece tincidunt. \n                        Sit et liber minimuam tsea no doctus fastidii.An molestiae definiebas mel.\n                        Quo everti vituperata et, quo cu omnis maiorum aetaea fierentlaboramus eum.Nam at dicant deterruisset.\n                        </p>\n                        <button className=\"my-2\">READ MORE <i className=\"fas fa-arrow-right mx-1\"></i></button>\n                            \n                    </div>\n            </div>          \n            </div>\n             \n             <div className=\"sub-blog mt-1 mb-2\">\n                 {loading ?  <Spinner/> : \n                 <div className=\"row text-center\">\n                    {blogs.slice(0,4).map(blog => \n                    <SubBlog id={blog._id} image={blog.image} title={blog.title} content={blog.topic} date={blog.date} type={blog.type} /> )\n                    \n                }                   \n                 </div>\n                }\n                 \n             </div>\n             \n\n        </div>\n       \n    )\n}\n\nconst mapStateToProps = state => ({\n    blog: state.blog\n})\n\nexport default connect(mapStateToProps, {getBlogs}) (Section3);\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/SideBar.js",["173","174"],"import React, {Fragment} from 'react';\nimport profile from '../photo/home/sidebar/profile.jpg';\nimport photo from '../photo/home/section3/sec3.jpg';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../components/Spinner';\nimport {Image} from 'cloudinary-react';\nimport Moment from 'react-moment';\n\nconst SideBar = ({blog:{blogs, loading}}) => {\n\n\n    return (\n        <div className=\"sidebar row justify-content-center\">\n            {/* SECTION Profile */}\n            <div className=\"about-me col-12\">\n                <div className=\"header\">\n                    <h3>About Me\n                    <div className=\"line\"></div>\n                </h3>\n                </div>\n              \n                <div className=\"profile-img text-center\">\n                    <img src={profile} alt=\"\"/>\n                </div>\n\n                <div className=\"text-center my-3\">\n                    <h4>Tanawat Limsakul</h4>\n                    <p>I'm Full-Stack developers who can use MERN stack to develop web application </p>\n                </div>\n\n            </div>\n\n            {/* SECTION Social */}\n            <div className=\"social\">\n                <div className=\"header\"> \n                    <h3>SUBSCRIBE & FOLLOW\n                        <div className=\"line\"></div>\n                    </h3>\n                </div>\n               \n                <div className=\"social-icon d-flex justify-content-start my-3\">\n                    <div className=\"icon mr-3 facebook\">\n                        <a href=\"https://www.facebook.com/earthlono.new.1/\">\n                            <i class=\"fab fa-4x fa-facebook-square\"></i>\n                        </a> \n                       \n                    </div>\n\n                    <div className=\"icon mr-3 linkedin\">\n                        <a href=\"https://www.linkedin.com/in/tanawat-limsakul-981283176/\" >\n                            <i class=\"fab fa-4x fa-linkedin\"></i>     \n                        </a>                  \n                    </div>\n\n                    <div className=\"icon mr-3 instagram\">\n                        <a href=\"https://www.instagram.com/earthlono/\">\n                            <i class=\"fab  fa-4x fa-instagram-square\"></i>\n                        </a>                   \n                    </div>\n\n                    <div className=\"icon mr-3 line\">\n                        <a href=\"\">\n                            <i class=\"fab fa-4x fa-line\"></i>\n                        </a>             \n                    </div>\n\n\n                </div>\n            </div>\n          {/* SECTION  Popular blog */}\n          <div className=\"popular-blog container mt-\">\n            <div className=\"header\"> \n                <h3>Popular Blogs\n                    <div className=\"line\"></div>\n                 </h3>\n            </div>\n\n        {loading ? <Spinner/> : \n            <Fragment>\n                {blogs.sort((a,b) => (b.likes.length > a.likes.length) ? 1 : ((a.likes.length > b.likes.length ) ? -1 : 0)).slice(0,4).map(blog => \n                    <div className=\"row popular my-4\">\n                    <div className=\"col-6 \">\n                    <Image className=\"image ml-2\"  cloudName=\"dsrdvi9rl\" publicId={blog.image} width=\"300\"  crope=\"scale\" />\n                    </div>\n                    <div className=\"col-6 p-0\">\n                        <div className=\"date\">\n                        <p><Moment format='MMMM DD, YYYY'>{blog.date}</Moment> | {blog.type}</p>\n                        </div>\n                        <h2 className=\"my-2\">{blog.topic}</h2>\n                        <Link to = {`/blog/${blog._id}`} className=\"my-2 link-popular\"><p>READ MORE </p><i className=\"fas fa-arrow-right mx-1\"></i></Link>\n\n\n                    </div>\n                    <div className=\"lineend mt-3\"></div> \n                </div>\n                )}\n            </Fragment>\n\n               \n           }\n           \n          </div>\n        </div>\n    )\n}\n\nconst mapStateToprops = state => ({\n    blog: state.blog\n})\n\nexport default connect (mapStateToprops,{})(SideBar);\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/home/components/SubBlog.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/Store.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/reducers/index.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/reducers/blog.js",["175","176"],"// import { post } from '../../../routes/api/blogs';\nimport {\n    GET_BLOGS,\n    GET_BLOG,\n    BLOG_ERROR,\n    CLEAR_BLOG,\n    CREATE_BLOG,\n    CREATE_SUCCESS,\n    CREATE_ERROR,\n    GET_MY_BLOG,\n    CLEAR_CREATED,\n    ADD_LIKE,\n    UNLIKE,\n    EDIT_BLOG,\n    CREATE_COMMENT,\n    DELETE_COMMENT,\n    EDIT_COMMENT,\n    LIKE_COMMENT,\n    UNLIKE_COMMENT,\n    DEFAULT_SUCCESS,\n    DELETE_BLOG\n} from '../actions/types';\n\nconst initialState = {\n    blogs: [], \n    myBlogs:[],\n    blog: null,\n    isCreated: false,\n    loading: true,\n    blogId: null,\n    error:{},\n    success:false,\n    deleteSuccess: false\n}\n\nexport default function(state = initialState, action){\n    const {type, payload} = action;\n\n    switch(type){\n        case GET_BLOGS: \n            return {\n                ...state,\n                blogs: payload,\n                loading: false\n            };\n        case GET_BLOG: \n        case EDIT_BLOG:\n            return {\n                ...state,\n                blog: payload,\n                loading: false\n            };\n        case CREATE_COMMENT:\n        case LIKE_COMMENT:\n        case UNLIKE_COMMENT:\n        case EDIT_COMMENT:\n        case DELETE_COMMENT:\n            return {\n                ...state,\n                blog: {...state.blog, comments: payload},\n                success: true\n            }\n        case GET_MY_BLOG:\n            return {\n                ...state, \n                myBlogs: payload, \n                loading: false\n            };\n        case CREATE_BLOG: \n            return {\n                ...state,\n                blogId:payload,\n                isCreated: true,\n                loading: false\n            }\n        case DELETE_BLOG: \n            return {\n                ...state,\n                deleteSuccess: true\n            }\n        \n        case ADD_LIKE: \n        case UNLIKE:\n            return {\n                ...state,\n                blog: {...state.blog, likes: payload}\n            }   \n        case DEFAULT_SUCCESS: \n            return {\n                ...state,\n                success: false,\n                deleteSuccess: false\n            }\n       \n        case CLEAR_BLOG: \n            return{\n                ...state,\n                blog: null,\n                isCreated: false,\n                loading: false\n            }\n        case CLEAR_CREATED: \n            return{\n                ...state,\n                isCreated: false,\n                blogId: null\n            }\n        case BLOG_ERROR: \n        case CREATE_ERROR:\n            return{\n                ...state,\n                error:payload,\n                loading: false\n            }\n        default: \n            return state;\n\n    }\n}","/Users/macintoshhd/Desktop/Web-Blog/client/src/actions/types.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/utils/setAuthToken.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/actions/blog.js",["177","178"],"/Users/macintoshhd/Desktop/Web-Blog/client/src/components/Spinner.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/auth/Login.js",["179","180"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../actions/auth';\n// SECTION Photo \nimport loginPhoto from '../photo/auth/login.jpg'\n\nconst Login = ({ auth : {isAuthenticated}, login}) => {\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    })\n\n    const {email, password} = formData;\n\n    const handleChange = name => e => {\n        setFormData({...formData, [name] : e.target.value});\n    }\n\n    const submitLogin = e => {\n        e.preventDefault();\n        login({formData});\n    }\n\n    if(isAuthenticated){\n       return <Redirect to ='/dashboard'/>\n\n    }\n\n    return (\n        \n        \n        <div className=\"container-fluid login\">\n            <div className=\"row justify-content-center\">\n                {/* SECTION Picture */}\n    \n                <div className=\"col-6\">\n                    <div className=\"auth-image\">\n                        <img src={loginPhoto} alt=\"\"/>           \n                    </div>  \n                </div>\n               \n                {/* SECTION Login Form */}\n                <div className=\"col-lg-6 col-sm-12 mt-3\">\n\n                    <form onSubmit ={(e) => submitLogin(e) } className=\"form\" >\n                        <h2 className=\"text-center\">Welcome and Let begin</h2>\n                    \n                    {/* SECTION Input Fields */}\n                        <div className=\"row auth-field mt-5 mb-3\">\n                        \n                            <div className=\"col-12 mb-3\">\n                                <p>Email</p>\n                                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\"/>\n                            </div>\n                        \n                            <div className=\"col-12 mb-3\">\n                                <p>Password</p>\n                                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" placeholder=\"password\"/>\n                            </div>                 \n                        \n                        </div>\n\n                        <div className=\"auth-btn\">\n                                <button type=\"submit\" className=\"btn btn-primary \">Login</button>\n\n                        </div>\n                           \n                    </form>\n                  \n                  \n                </div>     \n        </div>\n       \n        </div>\n\n       \n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { login }) (Login);\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/auth/Register.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/components/Header.js",["181"],"import React from 'react';\nimport login from '../photo/auth/login.jpg';\nconst Header = ({section, text}) => {\n    return (\n        <div className=\"header-img\">\n            <div className= {`header-image-${section} d-flex justify-content-center align-items-center`}>\n                <h1 className='px-5 py-3'>{text}</h1>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Header;\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/reducers/alert.js",["182"],"import {\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const {type,payload} = action; \n    switch(type){\n        case SET_ALERT: \n            return [...state, payload];\n        case REMOVE_ALERT: \n            return state.filter(alert => alert.id !== payload);\n        default : \n            return state;\n            \n    }\n};","/Users/macintoshhd/Desktop/Web-Blog/client/src/actions/alert.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/actions/auth.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/reducers/auth.js",["183","184"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOADUSER,\n    LOADUSER_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    users:[],\n    user:null,\n    loading: true,\n    isAuthenticated: false,\n    token: localStorage.getItem('token'),\n    error:{}\n}\n\nexport default function(state = initialState, action){\n    const {type, payload} = action; \n    switch(type){\n        case REGISTER_SUCCESS: \n            return {\n                ...state,\n                loading: false \n            }\n        case REGISTER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload  \n            }\n        case LOGIN_SUCCESS: \n            localStorage.setItem('token', payload.token); //NOTE set token that was returned from the back-end\n            return {\n                ...state,\n                ...payload,\n                loading: false,      \n            }\n        case LOGIN_FAIL: \n            return {\n                ...state, \n                loading: false, \n                isAuthenticated:false,\n                error: payload\n            }\n        \n        case LOGOUT: \n        localStorage.removeItem('token');\n            return {\n                ...state,\n                loading: false, \n                isAuthenticated: false,\n                token:localStorage.getItem('token'),\n                user:null\n            }\n\n        case LOADUSER:\n            return {\n                ...state,\n                user: payload, \n                isAuthenticated: true,\n                loading: false,\n            }\n\n        default: \n            return state;\n            \n    }\n}","/Users/macintoshhd/Desktop/Web-Blog/client/src/components/alert.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/components/Alert.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/dashboard/Dashboard.js",["185","186","187","188"],"import React, {Fragment, useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport Spinner from '../components/Spinner';\nimport {createBlog, getMyBlogs } from '../actions/blog';\nimport Blogs from './Blogs';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nconst Dashboard = ({auth: { user, loading }, blog: { myBlogs, isCreated, blogId} , createBlog, getMyBlogs}, history) => {\n    const [addBlog, setAddBlog] = useState(false);\n    const [previewSource, setPreviewSource] = useState();\n\n    const [formInfo, setFormInfo] = useState({\n        topic: '',\n        type: '',\n        content:'',\n        image:null,\n        formData: new FormData()\n    });\n\n    const {formData, image, topic, type, content } = formInfo\n   \n    useEffect( () => {\n        getMyBlogs();\n    },[]);\n\n    function RedirectUser (){\n        if(isCreated == true){\n            return <Redirect to = {`/blog/${blogId}`} />\n        }\n    }\n    \n    \n    //NOTE After user clicked close, formInfo will be cleared\n    const clearForm = () => {\n        setFormInfo({\n            topic:'',\n            type: '',\n            content: '',\n            image: null,\n            formData: new FormData()\n                })\n                formData.delete('topic');\n                formData.delete('type');\n                formData.delete('content');\n                formData.delete('image');\n                previewFile(null)\n\n        setAddBlog(false)\n    }\n    const AddBlogBtn = () => (\n        <Fragment>\n            {!addBlog ? <button onClick={() => setAddBlog(true)} type=\"button\" className=\"btn btn-outline-primary\" data-mdb-ripple-color=\"dark\">\n                            Add Blog\n                        </button> : \n                        <button onClick={() => clearForm()} type=\"button\" className=\"btn btn-danger\">Close</button>    \n            }       \n        </Fragment>\n       \n    )\n\n    const handleChange = name => e => {\n\n        const value = name == 'image'? e.target.files[0] : e.target.value;\n\n        if(name == 'image'){\n              //NOTE Create an instance of FileReader API\n\n              setFormInfo({...formInfo, [name]: value});\n              formData.set(name, value);\n              console.log('image is '+ formInfo.image);\n              previewFile(value);\n        \n        }else{\n            setFormInfo({...formInfo, [name]: value});\n            formData.set(name, value);   \n        }\n        }\n\n    const previewFile = (file) => {\n        if(file !== null){\n        const reader = new FileReader(); //NOTE Read the content of a file stored on the user's computer\n        reader.readAsDataURL(file) //NOTE Convert img to String URL\n        reader.onloadend = () =>{\n            setPreviewSource(reader.result) //NOTE get raw string as base 64 encoded image\n            // setImage(reader.result)\n            // image.push(reader.result);\n        }\n    }\n    //NOTE When user click close button, the image will disapear automatically\n    else{\n        setPreviewSource('')\n    }\n    }\n\n    const handleSubbmitFile = (e) => {\n        e.preventDefault(); //NOTE prevent from reload the page \n        createBlog(formData);\n    }\n\n\n    return (\n       \n        <Fragment>\n            {RedirectUser()}\n            <Header section='dashboard' text='Dashboard'/>\n\n            {/* <Image  cloudName=\"dsrdvi9rl\" publicId='nhotmpbfozf1njml4s8n' width=\"300\" crope=\"scale\" /> */}\n             <Fragment>\n                <div className=\" container my-2\">\n                    {/* SECTION Add Blog */}\n                    <div className=\"d-flex justify-content-end\">\n                        {AddBlogBtn()}\n                    </div>\n                    {addBlog &&\n                    <Fragment>\n                        <h2>Create Blog</h2>\n                        <form onSubmit={handleSubbmitFile} className=\"form-outline my-3\">\n                        <div className=\"mb-3\">\n                            <label for=\"exampleInputEmail1\" className=\"form-label\">Topic</label>\n                            <input onChange={handleChange('topic')} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                            <div id=\"emailHelp\" className=\"form-text\">You can create the great thing here</div>\n\n                            <div className=\"col-2 mt-4 p-0\">\n                                <label for=\"exampleFormControlSelect1\">Select type</label>\n                                <select onChange={handleChange('type')} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                                    <option>Select</option>\n                                    <option value={'Food'}>Food</option>\n                                    <option value={'Technology'}>Technology</option>\n                                    <option value={'Travel'}>Travel</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group mt-3\">\n                                <label for=\"exampleFormControlTextarea1\">Content</label>\n                                <textarea onChange={handleChange('content')} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                            </div>\n\n                        \n                            <div className=\"form-group mt-4\">\n                                <label for=\"exampleFormControlFile1\">Select Image</label>\n                                <input name=\"image\" onChange={handleChange('image')} type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"  accept=\"image/*\"/>\n\n                            </div>\n\n                            {previewSource &&(\n                                <div className=\"col-6 my-5 preview\"> \n                                <img src={previewSource} alt =\"Chosen\"/>\n                                </div>\n                            )}\n                            {image !== null && topic !== '' && type !== '' && type!== 'Select' && content !== '' ?\n                            \n                            <button className='btn btn-primary' type='submit'>Submit</button>\n                            :  <div className='btn btn-outline-dark'>Submit</div>\n}\n                        \n                        </div>\n                        </form>\n                    </Fragment>\n                    }\n\n                     {/* SECTION Table */}\n                    {user !== null && !loading && !addBlog ? \n                    <Fragment>\n                        {/* SECTION User details */}\n                    <h2 className=\"\">User details </h2>\n                    <img src={user.avatar} alt=\"\" className=\"rounded-circle border\"/>\n                    <table className=\"table table-striped table-hover \">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">First Name</th>\n                                <th scope=\"col\">Last Name</th>\n                                <th scope=\"col\">Email</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{user.firstName}</td>\n                                <td>{user.lastName}</td>\n                                <td>{user.email}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                        {/* SECTION User's Blogs */}\n                    <h2 className=\"\">My Blogs </h2>\n                        <Blogs blogs={myBlogs}  />\n\n                    </Fragment> \n\n                    \n\n\n\n                      : !addBlog ? <Spinner/> : <Fragment></Fragment>}\n                </div>\n             </Fragment>\n             \n           \n           \n        </Fragment>\n      \n    )\n}\nconst mapStateToProps = state => ({\n    auth : state.auth,\n    blog: state.blog\n});\n\nexport default connect(mapStateToProps,{ createBlog, getMyBlogs}) (withRouter(Dashboard));\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/PrivateRoute.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/Blogs.js",["189","190","191","192","193","194"],"import React, {useEffect, useState} from 'react';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport { getBlogs } from '../actions/blog';\nimport { Link, Redirect } from 'react-router-dom';\n//NOTE use api from React Table\nimport { useTable, useSortBy } from 'react-table'\nimport Spinner from '../components/Spinner';\nimport Moment from 'react-moment';\nimport { MDBDataTable } from 'mdbreact';\nimport blog from '../reducers/blog';\n\n\n\nconst Blogs = ({blog: {blogs, loading}, getBlogs}) => {\n\n    useEffect(() => {\n        getBlogs();\n        \n    },[getBlogs])\n  \n\n    //SECTION Table \n\n    //NOTE Access Button\n    const seeBlog = (id) => (\n      <Link  className=\"btn btn-warning btn-sm mx-3 text-white\" to ={`/blog/${id}`}>\n        Click\n      </Link>\n\n    )\n\n\n    var rows = []; \n\n    blogs.map(blog => {\n      rows.push({topic:blog.topic,date: <Moment startOf={'hour'} fromNow>{blog.date}</Moment>,firstName:blog.user.firstName,type:blog.type,click:seeBlog(blog._id)\n      })})\n      console.log('row is' +rows.map(row=>row))\n\n    \n    \n\n    const dataColum ={columns:[\n          {\n              label: 'Topic',\n              field: 'topic',\n              sort: 'asc',\n              width: 150\n\n          },\n          {\n            label: 'type',\n            field: 'type',\n            sort: 'asc',\n            width: 150\n\n        },\n        {\n          label: 'date',\n            field: 'date',\n            sort: 'asc',\n            width: 150\n        },\n          \n        {\n          label: 'name',\n          field: 'firstName',\n          sort: 'asc',\n          width: 150\n\n      },\n      {\n        label: 'Read Blog',\n          field: 'click',\n          sort: 'asc',\n          width: 150\n        \n      }\n  \n  ]}\n\n  dataColum.rows =rows\n\n\n  return(\n    <div>\n      <Header section='blogs' text='Blogs'/>\n      <div className=\"container-fluid my-4\">\n        {blogs !== null && !loading ?     <MDBDataTable striped bordered small order={['age', 'asc' ]} data={dataColum} /> \n        : <Spinner/>}\n      \n      </div>\n     \n    </div>\n  )\n\n  \n\n\n    }\n    \n    \n\n\nconst mapStateToProps = state => ({\n    blog: state.blog\n});\n\nexport default connect(mapStateToProps, { getBlogs })(Blogs);","/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/Blog.js",["195","196","197","198"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getBlog, likeBlog, unlikeBlog, editBlog, deleteBlog } from '../actions/blog';\nimport Spinner from '../components/Spinner';\nimport Header from '../components/Header';\nimport {Image} from 'cloudinary-react';\nimport Moment from 'react-moment';\nimport Comment from './Comment';\nimport { withRouter } from 'react-router-dom'\n\n\n\nconst Blog = ({match, auth:{user} ,blog:{ blog, loading, success }, getBlog, likeBlog, unlikeBlog, editBlog, deleteBlog, history}) => {\n\n    const [edit, setEdit] = useState(false);\n    const [previewSource, setPreviewSource] = useState();\n    const [isSubmit, setIsSubmit] = useState(false);\n    const [formInfo, setFormInfo] = useState({\n        topic: '',\n        type: '',\n        content:'',\n        image:null,\n        formData: new FormData()\n    });\n\n    const {topic, type, content, image, formData } = formInfo;\n\n    useEffect(() => {\n       getBlog(match.params.id);\n       init();\n    },[edit])\n    \n    //NOTE Prevent props of undefined \n    const init = () => {\n        if(blog !== null){\n            setFormInfo({...formInfo, \n                topic: blog.topic, \n                type: blog.type, \n                content: blog.content\n            })\n            formData.set('topic', blog.topic);\n            formData.set('type', blog.type);\n            formData.set('content', blog.content);\n\n\n        }\n    }\n\n    //SECTION Blog\n    const displayBlog = props => (\n        <div className=\"container-fluid\">\n            {blog !== null && !loading ? \n                <div className=\"blog\">\n                        <div className=\"row justify-content-between \">\n                            <div className=\"col-lg-2 col-sm-12\">\n                                <Moment format='DD/MM/YYYY'>{blog.date}</Moment>\n                            </div>\n                            <div className=\"col-lg-8 col-sm-12 text-center my-4\">\n                                <h2>{blog.topic}</h2>\n                            </div>     \n                            <div className=\"like-dislike col-lg-2 col-sm-12 text-center\"> \n                                <i onClick={() => likeBlog(blog._id)} className =\"far fa-2x fa-thumbs-up green-text mx-2\"><p>{blog.likes.length}</p></i>\n                                <i onClick={() => unlikeBlog(blog._id)} className =\"far fa-2x fa-thumbs-down red-text mx-2\"></i>\n\n                                {!edit && user !== null && user._id === blog.user._id &&  \n                                      <i onClick={() => setEdit(true)} className=\"far fa-2x fa-edit mx-4 orange-text\"></i> }  \n\n                            </div> \n                    </div>\n                \n                    <div className=\"container blog-image\">\n                        <div className = \"text-center my-3\">\n                            <div className= \"col-12\">\n                                <Image className=\"image\"  cloudName=\"dsrdvi9rl\" publicId={blog.image}  crope=\"scale\" />\n                            </div>        \n                        </div>\n                        <p>{blog.content}</p>\n                    </div>\n                    \n                    <Comment blog={blog} success={success}/>\n\n                </div>\n\n                \n        :<Spinner/> }\n        </div>\n    )\n\n    //SECTION Edit Form \n    const editForm = props => (\n        <Fragment>\n            <div className=\"d-flex justify-content-between\">\n                <h2>Edit Blog</h2>\n                <div className=\"\">  \n                    <button onClick={()=>deleteBlog(blog._id, history)} className='btn btn-danger'>delete\n                    <i className=\"fas fa-times white-text ml-2\"></i>\n                    \n                    </button>\n                </div>\n            </div>\n                      \n                        <form onSubmit={handleSubbmitFile} className=\"form-outline my-3\">\n                        <div className=\"mb-3\">\n                            <label for=\"exampleInputEmail1\" className=\"form-label\">Topic</label>\n                            <input value={topic} onChange={handleChange('topic')} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                            <div id=\"emailHelp\" className=\"form-text\">You can edit the topic here</div>\n\n                            <div className=\"col-2 mt-4 p-0\">\n                                <label for=\"exampleFormControlSelect1\">Select type</label>\n                                <select value={type} onChange={handleChange('type')} className=\"form-control\" id=\"exampleFormControlSelect1\">\n                                    <option>Select</option>\n                                    <option value={'Food'}>Food</option>\n                                    <option value={'Technology'}>Technology</option>\n                                    <option value={'Travel'}>Travel</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group mt-3\">\n                                <label for=\"exampleFormControlTextarea1\">Content</label>\n                                <textarea value={content} onChange={handleChange('content')} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                            </div>\n\n                            {previewSource &&(\n                                <div className=\"col-6 my-5 preview\"> \n                                <img className=\"images\" src={previewSource} alt =\"Chosen\" />\n                                </div>\n                            )}\n                            <button className='btn btn-primary' type='submit'>Edit</button>\n                            {isSubmit ? <button onClick={()=>setEdit(false)} className='btn btn-danger' type='submit'>Close</button>\n                            :<button onClick={()=>setEdit(false)} className='btn btn-danger' type='submit'>Cancle</button>\n                            }           \n                        </div>\n                        </form>\n                    </Fragment>\n    )\n\n    //ANCHOR Functions\n    const handleChange = name => e => {\n        const value = name == 'image'? e.target.files[0] : e.target.value;\n        if(name == 'image'){\n              //NOTE Create an instance of FileReader API\n              setFormInfo({...formInfo, [name]: value});\n              formData.set(name, value);\n              console.log('image is '+ formInfo.image);\n              previewFile(value);\n        }else{\n            setFormInfo({...formInfo, [name]: value});\n            formData.set(name, value);   \n            console.log('topic is '+ formData.get('topic'));\n\n            }\n        }\n\n        const previewFile = (file) => {\n            if(file !== null){\n            const reader = new FileReader(); //NOTE Read the content of a file stored on the user's computer\n            reader.readAsDataURL(file) //NOTE Convert img to String URL\n            reader.onloadend = () =>{\n                setPreviewSource(reader.result) //NOTE get raw string as base 64 encoded image\n            }\n        }\n        //NOTE When user click close button, the image will disapear automatically\n        else{\n            setPreviewSource('')\n        }\n        }\n\n        const handleSubbmitFile = (e) => {\n            e.preventDefault(); //NOTE prevent from reload the page \n            editBlog(formInfo,blog._id, history);\n            setIsSubmit(true);\n            \n        }\n    \n\n    return (\n        <Fragment>\n            {blog !== null && !loading &&\n                         <Header section ={blog.type} text={blog.type}/>\n            } \n            \n               {!edit?<div className=\"container-fluid blog my-4\"> {displayBlog()}\n                </div>    \n\n               : \n               <div className=\"container my-4\">\n                    {editForm()} \n               </div>}\n                                \n        </Fragment>\n    )\n}\nconst mapStateToProps = state => ({\n    blog: state.blog,\n    auth: state.auth\n});\nexport default connect(mapStateToProps, { getBlog, likeBlog, unlikeBlog, editBlog, deleteBlog})(withRouter(Blog));\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/dashboard/Blogs.js",["199"],"import React, { Fragment } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment'; \n\n\n\n\n\nconst Blogs = ({blogs}) => {\n  //NOTE Access Button\n  const seeBlog = (id) => (\n    <Link  className=\"btn btn-warning btn-sm mx-3 text-white\" to ={`/blog/${id}`}>\n      Click\n    </Link>\n\n  )\n\n\n  var rows = []; \n\n  blogs.map(blog => {\n    rows.push({topic:blog.topic,date: <Moment startOf={'hour'} fromNow>{blog.date}</Moment>,type:blog.type,click:seeBlog(blog._id)\n    })})\n    console.log('row is' +rows.map(row=>row))\n\n  \n  \n\n  const dataColum ={columns:[\n        {\n            label: 'Topic',\n            field: 'topic',\n            sort: 'asc',\n            width: 150\n\n        },\n        {\n          label: 'type',\n          field: 'type',\n          sort: 'asc',\n          width: 150\n\n      },\n      {\n        label: 'date',\n          field: 'date',\n          sort: 'asc',\n          width: 150\n      },\n        \n    {\n      label: 'Read Blog',\n        field: 'click',\n        sort: 'asc',\n        width: 150\n      \n    }\n\n]}\n\ndataColum.rows =rows\n\n\nreturn(\n  <Fragment>\n    {blogs !== null && <MDBDataTable striped bordered small order={['age', 'asc' ]} data={dataColum} /> \n    }\n  </Fragment>\n)\n\n  }\n\nexport default Blogs;\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/components/PopupDanger.js",["200","201"],"/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/Comment.js",["202","203"],"import React, { useState, Fragment, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport AddComment from './AddComment';\nimport EditComment from './EditComment';\nimport { connect } from 'react-redux';\nimport { likeComment, getBlog, unlikeComment, deleteComment } from '../actions/blog'\n\n\nconst Comment = ({auth:{user}, success, blog:{blog}, likeComment, getBlog, unlikeComment, deleteComment}) => {\n    const [addComment, setAddComment] = useState(false);\n    // const [edit, setEdit] = useState(false);\n    const [formData, setFormData] = useState({\n        comment: null,\n        edit:false\n    })\n\n    const { comment, edit } = formData;\n    const cancleCreate = () => {\n        setAddComment(false);\n    }\n\n    const cancleEdit = () => {\n        setFormData({...formData, edit:false});\n    }\n\n    useEffect(() => {\n        if(success == true){\n        getBlog(blog._id) //NOT wait update like comment so it will use old value\n        }\n\n    },[success])\n\n    const header = props => (\n        <div className=\"row justify-content-center\">              \n            <div className=\"col-8\">\n                <h2 className=\"text-center\">Comments</h2>\n            </div>\n            <div className=\"add-comment\">\n                {!addComment && user!== null && \n                    <i onClick={() => setAddComment(true)} class=\"fas fa-2x fa-plus-circle blue-text\"></i>\n                }\n            </div>\n        </div>\n\n    )\n    const comments = props => (\n        <Fragment>\n            {blog !== null && blog.comments.map(comment => \n                <div className=\"row justify-content-center my-4\">            \n                    <div className=\"col-lg-4 col-sm-12 ml-4 comment-profile\">\n                        <div className=\"d-flex justify-content-between border\">\n                        <img src={comment.user.avatar} alt=\"\" className=\"rounded-circle border\"/>\n                        <div className=\"text-center\">\n                            <p><span>Name:</span> {comment.user.firstName}</p>\n                        </div>\n                        <div></div>\n                        </div>\n                      \n                        \n                    </div>\n                    <div className=\"col-lg-6 col-sm-12 border\">\n                        <div className=\"comment-header border-bottom p-2\">\n                            <div className=\"d-flex justify-content-between\">\n                                <div className=\"\"> \n                                    <Moment format='DD/MM/YYYY'>{comment.date}</Moment>\n                                </div>\n                            \n                                <div className=\"like-dislike \">\n                                    <i onClick={() => likeComment(blog._id,comment._id)} className =\"far fa-thumbs-up green-text mx-2\"><p>{comment.likes.length}</p></i>\n                                    <i onClick={() => unlikeComment(blog._id, comment._id)}  className =\"far fa-thumbs-down red-text mx-2\"></i>\n                                    {user !== null && user._id === comment.user._id &&\n                                    <Fragment>\n                                        <i onClick={() => setFormData({edit:true, comment:comment})} className=\"far  fa-edit mx-2 orange-text\"></i>  \n                                        <i onClick={() => deleteComment(blog._id, comment._id)} className=\"far fa-trash-alt mx-2 red-text\"></i> \n                                    </Fragment>\n                                     \n                                      }\n                                  \n                                </div>\n                            </div>\n                      </div>\n                        <div className=\"text p-4\">\n                        {comment.text}\n                        </div>\n                    </div>\n                </div>\n        \n        )}\n        </Fragment>\n       \n      \n        \n    )\n    return (\n        <div className=\"comments my-4\">\n            {header()}\n            <div className=\"display-comments my-4\">\n                {addComment && <div className=\"container my-5\">\n                         <AddComment cancleCreate={cancleCreate} blog={blog}/>\n                         </div>}\n                {edit && <div className=\"container my-5\">\n                         <EditComment cancleEdit={cancleEdit} comment={comment}/>\n                         </div> }\n                    {comments()}        \n            </div>                   \n        </div>\n    )\n}\nconst mapStateToProps = state => ({\n    blog: state.blog, \n    auth: state.auth\n})\n\nexport default connect(mapStateToProps,{ likeComment, getBlog, unlikeComment, deleteComment })(Comment);\n","/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/AddComment.js",[],"/Users/macintoshhd/Desktop/Web-Blog/client/src/blog/EditComment.js",["204"],"import React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { editComment } from '../actions/blog'\n\nconst EditComment = ({editComment, cancleEdit, comment, blog:{blog}}) => {\n    const [formData, setFormData] = useState({\n        text: ''\n    });\n\n    const { text } = formData;\n    useEffect(() => {\n        setFormData({...formData, text: comment.text});\n        \n    },[])\n\n    const handleChange = name => e => {\n        setFormData({...formData, [name]: e.target.value});\n        \n    }\n\n    const onSubmit = async e => {\n        e.preventDefault(); \n        editComment(formData,blog._id,comment._id);\n        cancleEdit()  \n    }\n\n    return (\n        <form onSubmit={onSubmit} className=\"form-outline my-3\">\n            <h3 className=\"text-center\">Edit Comment</h3>\n            <textarea value={text} onChange={handleChange('text')} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n            <button className='btn btn-primary' type='submit'>Edit</button>  \n            <button onClick={() => cancleEdit()} className='btn btn-danger' >Cancle</button>            \n          \n        </form>\n    )\n}\n\nconst mapStateToProps = state => ({\n    blog: state.blog\n})\n\nexport default connect(mapStateToProps, {editComment}) (EditComment);\n",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"210","line":1,"column":16,"nodeType":"211","messageId":"212","endLine":1,"endColumn":24},{"ruleId":"209","severity":1,"message":"213","line":3,"column":8,"nodeType":"211","messageId":"212","endLine":3,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":63,"column":25,"nodeType":"216","endLine":63,"endColumn":36},{"ruleId":"209","severity":1,"message":"217","line":8,"column":5,"nodeType":"211","messageId":"212","endLine":8,"endColumn":19},{"ruleId":"218","severity":1,"message":"219","line":36,"column":1,"nodeType":"220","endLine":119,"endColumn":2},{"ruleId":"209","severity":1,"message":"217","line":7,"column":5,"nodeType":"211","messageId":"212","endLine":7,"endColumn":19},{"ruleId":"209","severity":1,"message":"221","line":14,"column":5,"nodeType":"211","messageId":"212","endLine":14,"endColumn":15},{"ruleId":"209","severity":1,"message":"222","line":15,"column":12,"nodeType":"211","messageId":"212","endLine":15,"endColumn":17},{"ruleId":"209","severity":1,"message":"223","line":15,"column":19,"nodeType":"211","messageId":"212","endLine":15,"endColumn":27},{"ruleId":"209","severity":1,"message":"224","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":8,"column":1,"nodeType":"220","endLine":19,"endColumn":2},{"ruleId":"209","severity":1,"message":"225","line":7,"column":5,"nodeType":"211","messageId":"212","endLine":7,"endColumn":18},{"ruleId":"218","severity":1,"message":"219","line":20,"column":1,"nodeType":"220","endLine":71,"endColumn":2},{"ruleId":"226","severity":1,"message":"227","line":25,"column":7,"nodeType":"228","endLine":25,"endColumn":9,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":28,"column":22,"nodeType":"232","messageId":"233","endLine":28,"endColumn":24},{"ruleId":"230","severity":1,"message":"231","line":64,"column":28,"nodeType":"232","messageId":"233","endLine":64,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":66,"column":17,"nodeType":"232","messageId":"233","endLine":66,"endColumn":19},{"ruleId":"209","severity":1,"message":"234","line":1,"column":27,"nodeType":"211","messageId":"212","endLine":1,"endColumn":35},{"ruleId":"209","severity":1,"message":"235","line":5,"column":16,"nodeType":"211","messageId":"212","endLine":5,"endColumn":24},{"ruleId":"209","severity":1,"message":"236","line":7,"column":10,"nodeType":"211","messageId":"212","endLine":7,"endColumn":18},{"ruleId":"209","severity":1,"message":"237","line":7,"column":20,"nodeType":"211","messageId":"212","endLine":7,"endColumn":29},{"ruleId":"209","severity":1,"message":"238","line":11,"column":8,"nodeType":"211","messageId":"212","endLine":11,"endColumn":12},{"ruleId":"239","severity":1,"message":"240","line":36,"column":20,"nodeType":"241","messageId":"242","endLine":36,"endColumn":22},{"ruleId":"209","severity":1,"message":"243","line":26,"column":34,"nodeType":"211","messageId":"212","endLine":26,"endColumn":39},{"ruleId":"226","severity":1,"message":"244","line":31,"column":7,"nodeType":"228","endLine":31,"endColumn":13,"suggestions":"245"},{"ruleId":"230","severity":1,"message":"231","line":139,"column":28,"nodeType":"232","messageId":"233","endLine":139,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":140,"column":17,"nodeType":"232","messageId":"233","endLine":140,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":22,"column":18,"nodeType":"241","messageId":"242","endLine":22,"endColumn":20},{"ruleId":"214","severity":1,"message":"246","line":31,"column":13,"nodeType":"216","endLine":31,"endColumn":101},{"ruleId":"214","severity":1,"message":"246","line":32,"column":13,"nodeType":"216","endLine":32,"endColumn":95},{"ruleId":"230","severity":1,"message":"231","line":27,"column":20,"nodeType":"232","messageId":"233","endLine":27,"endColumn":22},{"ruleId":"226","severity":1,"message":"247","line":31,"column":7,"nodeType":"228","endLine":31,"endColumn":16,"suggestions":"248"},{"ruleId":"226","severity":1,"message":"249","line":14,"column":7,"nodeType":"228","endLine":14,"endColumn":9,"suggestions":"250"},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'photo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CREATE_SUCCESS' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'CLEAR_BLOG' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'login' is defined but never used.","'LOADUSER_FAIL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyBlogs'. Either include it or remove the dependency array. If 'getMyBlogs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["253"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Redirect' is defined but never used.","'useTable' is defined but never used.","'useSortBy' is defined but never used.","'blog' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'image' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getBlog', 'init', and 'match.params.id'. Either include them or remove the dependency array. If 'getBlog' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["254"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'blog._id' and 'getBlog'. Either include them or remove the dependency array. If 'getBlog' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["255"],"React Hook useEffect has missing dependencies: 'comment.text' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["256"],"no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [getMyBlogs]",{"range":"265","text":"266"},"Update the dependencies array to be: [edit, getBlog, init, match.params.id]",{"range":"267","text":"268"},"Update the dependencies array to be: [blog._id, getBlog, success]",{"range":"269","text":"270"},"Update the dependencies array to be: [comment.text, formData]",{"range":"271","text":"272"},[846,848],"[getMyBlogs]",[1032,1038],"[edit, getBlog, init, match.params.id]",[962,971],"[blog._id, getBlog, success]",[406,408],"[comment.text, formData]"]